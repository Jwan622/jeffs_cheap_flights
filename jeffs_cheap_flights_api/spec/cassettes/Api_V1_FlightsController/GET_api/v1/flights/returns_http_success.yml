---
http_interactions:
- request:
    method: get
    uri: https://serpapi.com/search?api_key=75bd7fadd79341fdcfb11a8561988531ba35718f878d94bb4c08a4aa5897f2df&arrival_id=MAD&currency=USD&departure_id=JFK&engine=google_flights&hl=en&outbound_date=2024-04-01&output=json&q=&return_date=2024-04-24&source=ruby
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 29 Feb 2024 22:38:24 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 85d465b96d3c433d-EWR
      Cf-Cache-Status:
      - HIT
      Age:
      - '522'
      Cache-Control:
      - max-age=3600, public
      Etag:
      - W/"b12ffe7254e71ba6525000806089cf73"
      Vary:
      - Accept-Encoding
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Serpapi-Search-Id:
      - 65e105545b54efd3055b02bd
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - '09b344b4-eebb-428f-98c3-bfc1b6f92406'
      X-Robots-Tag:
      - noindex, nofollow
      X-Runtime:
      - '1.608336'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - cloudflare
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 29 Feb 2024 22:38:24 GMT
recorded_with: VCR 6.2.0
